<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jibug.cetty.sample.dao.mapper.BrGoodsMapper">
  <resultMap id="BaseResultMap" type="com.jibug.cetty.sample.entity.domain.BrGoods">
    <id column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="series" jdbcType="VARCHAR" property="series" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, price, creat_time, series, title, url
  </sql>
  <select id="selectByExample" parameterType="com.jibug.cetty.sample.entity.domain.BrGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from br_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from br_goods
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from br_goods
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jibug.cetty.sample.entity.domain.BrGoodsExample">
    delete from br_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jibug.cetty.sample.entity.domain.BrGoods">
    insert into br_goods (goods_id, price, creat_time, 
      series, title, url)
    values (#{goodsId,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{series,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jibug.cetty.sample.entity.domain.BrGoods">
    insert into br_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="series != null">
        series,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="series != null">
        #{series,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jibug.cetty.sample.entity.domain.BrGoodsExample" resultType="java.lang.Long">
    select count(*) from br_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update br_goods
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.series != null">
        series = #{record.series,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update br_goods
    set goods_id = #{record.goodsId,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      series = #{record.series,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jibug.cetty.sample.entity.domain.BrGoods">
    update br_goods
    <set>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="series != null">
        series = #{series,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jibug.cetty.sample.entity.domain.BrGoods">
    update br_goods
    set price = #{price,jdbcType=DECIMAL},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      series = #{series,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where goods_id = #{goodsId,jdbcType=VARCHAR}
  </update>
</mapper>